IF(COIN_OSI_LIBRARY)
  MESSAGE(STATUS "Looking for Coin Osi:")
ENDIF()

if (COIN_INCLUDE_DIR AND COIN_COIN_UTILS_LIBRARY AND COIN_OSI_LIBRARY)
  MESSAGE(STATUS "  Already on Cache ${COIN_OSI_LIBRARY} ${COIN_COIN_UTILS_LIBRARY}")
  # in cache already
  set(COIN_FOUND TRUE)
  set(COIN_INCLUDE_DIRS "${COIN_INCLUDE_DIR}" )
  set(COIN_LIBRARIES "${COIN_LIBRARY};${COIN_CXX_LIBRARY}" )

  SET(COIN_OSI_LIBRARIES "${COIN_OSI_LIBRARY};${COIN_COIN_UTILS_LIBRARY}")
  SET(COIN_LIBRARIES "${COIN_OSI_LIBRARIES}")

else (COIN_INCLUDE_DIR)

  FIND_PATH(COIN_INCLUDE_DIR coin/CoinUtilsConfig.h
    HINTS ${COIN_ROOT_DIR}/include
    )


  FIND_LIBRARY(COIN_COIN_UTILS_LIBRARY
    NAMES CoinUtils libCoinUtils
    HINTS ${COIN_ROOT_DIR}/lib/coin
    HINTS ${COIN_ROOT_DIR}/lib
    )

  FIND_LIBRARY(COIN_OSI_LIBRARY
    NAMES Osi libOsi
    HINTS ${COIN_ROOT_DIR}/lib/coin
    HINTS ${COIN_ROOT_DIR}/lib
    )

  IF(COIN_OSI_LIBRARY)
    MESSAGE(STATUS "Coin Osi found: ${COIN_OSI_LIBRARY}")
  ENDIF()


  INCLUDE(FindPackageHandleStandardArgs)
  FIND_PACKAGE_HANDLE_STANDARD_ARGS(COIN DEFAULT_MSG
    COIN_INCLUDE_DIR
    COIN_OSI_LIBRARY
    COIN_COIN_UTILS_LIBRARY
    )



  SET(COIN_INCLUDE_DIRS "${COIN_INCLUDE_DIR}")
  SET(COIN_OSI_LIBRARIES "${COIN_OSI_LIBRARY};${COIN_COIN_UTILS_LIBRARY}")
  SET(COIN_LIBRARIES "${COIN_OSI_LIBRARIES}")


endif()

include_directories(SYSTEM "${COIN_INCLUDE_DIR}")

find_package(LAPACK)
find_package(ZLIB)
find_package(Threads)
find_package(LibM)

set(COIN_OSI_LIBRARIES "${COIN_OSI_LIBRARIES};${LAPACK_LIBRARIES};${ZLIB_LIBRARIES};${CMAKE_THREAD_LIBS_INIT};${LibM_LIBRARIES}" )

MESSAGE(STATUS "COIN OSi Libs: ${COIN_OSI_LIBRARIES}")

# Mark as advanced options in ccmake:
mark_as_advanced(
  COIN_INCLUDE_DIRS
  COIN_OSI_LIBRARES
  COIN_LIBRARIES
  )
